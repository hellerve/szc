(load "cli/cli")
(load "compiler")

(import-all "cli")
(import-all "compiler")

(define (main from args)
  (if (file-exists? from)
    (let ((to (get-from args "output" "out.s"))
          (compiled (compiler:compile (parse from))))
      (begin
        (with-output-file to (lambda (f) (write compiled f)))
        (exit 0)))
    (begin
      (error "File" from "does not exist.")
      (exit 1))))

(define args #{:help "The silly zepto compiler compiles silly zepto programs."
               :options #{"output" #{:short "o"
                                     :help  "where the output should be written to (default: out.s)"}}
               :arguments (("file"
                            "the file that should be compiler"))})


(define env (cli:create (list (cli:command "compile" main args))))

(cli:play env #{:name "szc" :version "0.0.1"})
